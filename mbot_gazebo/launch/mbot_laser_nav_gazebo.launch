<launch>
    <!-- 加载机器人模型描述参数 -->
    <!-- $(find mrobot_gazebo)/urdf/mrobot_with_rplidar.urdf.xacro -->
    <!-- $(find wheelchair1)/xacro/fake_wheelchair_camera_laser.xacro-->
    <!-- $(find wheelchair1)/xacro/wheelchair1_camera_laser.urdf.xacro -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find mrobot_gazebo)/urdf/mrobot_with_rplidar.urdf.xacro'" />
  
    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">  
        <!-- 设置launch文件的参数 -->    
        <arg name="world_name" value="$(find mbot_gazebo)/worlds/resthome2" />
        <!-- <arg name="world_name" value="$(find rrt_exploration_tutorials)/launch/includes/worlds/house.world"/> -->

        <!-- <arg name="world_name" value="$(find mrobot_gazebo)/worlds/cloister.world"/> -->
        <!-- <arg name="world_name" value="$(find mbot_gazebo)/worlds/open.world"/> -->
    </include>

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- 在gazebo中加载机器人模型 (-urdf:urdf格式  -model：作为模型  mrobot：模型名称 -param：参数引用 robot_description：参数来源  )-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -model mrobot -param robot_description"/> 

</launch>

