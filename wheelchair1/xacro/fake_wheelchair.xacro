<?xml version="1.0" encoding="utf-8"?>
<robot name="mywheelchair" xmlns:xacro="http://wiki.ros.org/xacro">
    <!-- 封装变量、常量 -->
    <!-- PI 值设置精度需要高一些，否则后续车轮翻转量计算时，可能会出现肉眼不能察觉的车轮倾斜，从而导致模型抖动 -->
    <xacro:property name="PI" value="3.1415926"/>
    <!-- 宏:黑色设置 -->
    <material name="black">
        <color rgba="0.0 0.0 0.0 1.0" />
    </material>
    <!-- 底盘属性 -->
    <xacro:property name="base_footprint_radius" value="0.001" /> <!-- base_footprint 半径  -->
    <xacro:property name="base_link_length" value="0.70" /> <!-- base_link 长 -->
    <xacro:property name="base_link_width" value="0.50" /> <!-- base_link 宽 -->
    <xacro:property name="base_link_height" value="0.50" /> <!-- base_link 高 -->
    <xacro:property name="earth_space" value="0.10" /> <!-- 离地间距 -->
    <xacro:property name="base_link_m" value="1.0" /> <!-- 质量  -->

    <!-- 底盘 -->
    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius="${base_footprint_radius}" />
            </geometry>
        </visual>
    </link>

    <link name="base_link">
      <visual>
        <geometry>
          <box size="${base_link_length} ${base_link_width} ${base_link_height}"  />
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <material name="yellow">
          <color rgba="0.5 0.3 0.0 0.5" />
        </material>
      </visual>
      <collision>
        <geometry>
          <box size="${base_link_length} ${base_link_width} ${base_link_height}" />
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0" />
      </collision>
      <xacro:Box_inertial_matrix m="${base_link_m}" l="${base_link_length}" w="${base_link_width}" h="${base_link_height}" />
    </link>

    <joint name="base_link2base_footprint" type="fixed">
      <parent link="base_footprint" />
      <child link="base_link" />
      <origin xyz="0 0 ${earth_space + base_link_height / 2 }" />
    </joint>
    <gazebo reference="base_link">
        <material>Gazebo/Yellow</material>
    </gazebo>

    <!-- 驱动轮 -->
    <!-- 驱动轮属性 -->
    <xacro:property name="wheel_radius" value="0.13" /><!-- 半径 -->
    <xacro:property name="wheel_length" value="0.10" /><!-- 宽度 -->
    <xacro:property name="wheel_x" value="${base_link_length / 2 - wheel_radius - 2}" /> <!-- 车轮x位置-->>
    <xacro:property name="wheel_y" value="${base_link_width / 2 + wheel_length / 2}" /> <!-- 车轮y位置-->>
    <xacro:property name="wheel_m" value="0.1" /> <!-- 质量  -->

    <!-- 驱动轮宏实现 -->
    <xacro:macro name="add_wheels" params="name flag">
      <link name="${name}_front_wheel_Link">
        <visual>
          <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_length}" />
          </geometry>
          <origin xyz="0.0 0.0 0.0" rpy="${PI / 2} 0.0 0.0" />
          <material name="black" />
        </visual>
        <collision>
          <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_length}" />
          </geometry>
          <origin xyz="0.0 0.0 0.0" rpy="${PI / 2} 0.0 0.0" />
        </collision>
        <xacro:cylinder_inertial_matrix m="${wheel_m}" r="${wheel_radius}" h="${wheel_length}" />
      </link>

      <joint name="${name}_front_wheel_joint" type="continuous">
        <parent link="base_link" />
        <child link="${name}_front_wheel_Link" />
        <origin xyz="${wheel_x} ${flag * wheel_y} ${-(earth_space + base_link_height/ 2 - wheel_radius) }" />
        <axis xyz="0 1 0" />
      </joint>

      <gazebo reference="${name}_front_wheel_Link">
        <material>Gazebo/Black</material>
      </gazebo>

      <!-- 传动实现：用于连接控制器与关节 -->
      <transmission name="${name}_front_wheel_joint_trans">
          <type>transmission_interface/SimpleTransmission</type>
          <joint name="${name}_front_wheel_joint" />
              <!-- <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
          </joint> -->
          <actuator name="${name}_front_wheel_joint_motor">
              <!-- <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface> -->
              <hardwareInterface>VelocityJointInterface</hardwareInterface>
              <mechanicalReduction>1</mechanicalReduction>
          </actuator>
      </transmission>
    </xacro:macro>

    <xacro:add_wheels name="left" flag="1" />
    <xacro:add_wheels name="right" flag="-1" />

    <!-- 支撑轮 -->
    <!-- 支撑轮属性 -->
    <xacro:property name="support_wheel_radius" value="0.10" /> <!-- 支撑轮半径 -->
    <xacro:property name="support_wheel_m" value="0.03" /> <!-- 质量  -->

    <!-- 支撑轮宏 -->
    <xacro:macro name="add_support_wheel" params="name flag" >
      <link name="${name}_back_wheel">
        <visual>
          <geometry>
            <sphere radius="${support_wheel_radius}" />
          </geometry>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <material name="black" />
        </visual>
        <collision>
          <geometry>
            <sphere radius="${support_wheel_radius}" />
          </geometry>
          <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
        <xacro:sphere_inertial_matrix m="${support_wheel_m}" r="${support_wheel_radius}" />
      </link>

      <joint name="${name}_back_wheel2base_link" type="continuous">
        <parent link="base_link" />
        <child link="${name}_back_wheel" />
        <!-- <origin xyz="${-(wheel_x)} ${flag * (base_link_width / 2 - support_wheel_radius)} ${-(base_link_height / 2)}" /> -->
        <origin xyz="${-(flag * base_link_length) / 2} 0 ${-(base_link_height / 2)}" />
        <axis xyz="1 1 1" />
      </joint>
      <gazebo reference="${name}_back_wheel">
        <material>Gazebo/Black</material>
      </gazebo>
    </xacro:macro>

    <xacro:add_support_wheel name="middle" flag="1" />
    <!-- <xacro:add_support_wheel name="left" flag="1" /> -->
    <!-- <xacro:add_support_wheel name="right" flag="-1" /> -->

    <!-- 脚撑属性 -->
    <xacro:property name="foot_length" value="0.30" />
    <!-- <xacro:property name="foot_Width" value="0.50" /> -->
    <xacro:property name="foot_width" value="0.50" />
    <xacro:property name="foot_height" value="0.003" />
    <xacro:property name="foot_x" value="${base_link_length / 2}" /> <!-- 脚撑x位置 -->
    <xacro:property name="foot_m" value="0.03" /> <!-- 质量  -->

    <!-- 脚撑 -->
    <link name="foot_link">
        <visual>
          <geometry>
            <box size="${foot_length} ${foot_width} ${foot_height}" />
          </geometry>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <material name="black" />
        </visual>
        <collision>
          <geometry>
            <box size="${foot_length} ${foot_width} ${foot_height}" />
          </geometry>
          <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
        <xacro:Box_inertial_matrix m="${foot_m}" l="${foot_length}" w="${foot_width}" h="${foot_height}" />
    </link>
    <joint name="foot_link" type="fixed">
        <parent link="base_link" />
        <child link="foot_link" />
        <origin xyz="${(foot_x + foot_length / 2)} 0 ${-(base_link_height / 2)}" />
    </joint>
    <gazebo reference="foot_link">
        <material>Gazebo/Yellow</material>
    </gazebo>

    <!-- 靠背属性 -->
    <xacro:property name="back_length" value="0.05" />
    <xacro:property name="back_width" value="0.5" />
    <xacro:property name="back_height" value="0.7" />
    <xacro:property name="back_m" value="0.5" />

    <!-- 靠背 -->
    <link name="back_link">
         <visual>
            <geometry>
              <box size="${back_length} ${back_width} ${back_height}" />
            </geometry>
            <origin xyz="0 0 ${back_height / 2}" rpy="0 0 0" />
            <material name="yellow" >
              <color rgba="0.5 0.3 0.0 0.5" />
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${back_length} ${back_width} ${back_height}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
        <xacro:Box_inertial_matrix m="${back_m}" l="${back_length}" w="${back_width}" h="${back_height}" />
    </link>
    <joint name="back_joint" type="fixed">
      <parent link="base_link" />
      <child link="back_link" />
      <origin xyz="${-(base_link_length / 2 - back_length / 2)} 0 ${(base_link_height / 2)}" />
    </joint>
    <gazebo reference="back_link">
      <material>Gazebo/Yellow</material>
    </gazebo>
</robot>